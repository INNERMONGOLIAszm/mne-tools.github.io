.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_auto_examples_preprocessing_plot_run_ica.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_preprocessing_plot_run_ica.py:


================================
Compute ICA components on epochs
================================

ICA is fit to MEG raw data.
We assume that the non-stationary EOG artifacts have already been removed.
The sources matching the ECG are automatically found and displayed.

Note that this example does quite a bit of processing, so even on a
fast machine it can take about a minute to complete.


.. code-block:: python


    # Authors: Denis Engemann <denis.engemann@gmail.com>
    #
    # License: BSD (3-clause)

    import mne
    from mne.preprocessing import ICA, create_ecg_epochs
    from mne.datasets import sample

    print(__doc__)







Read and preprocess the data. Preprocessing consists of:

- MEG channel selection
- 1-30 Hz band-pass filter
- epoching -0.2 to 0.5 seconds with respect to events


.. code-block:: python


    data_path = sample.data_path()
    raw_fname = data_path + '/MEG/sample/sample_audvis_filt-0-40_raw.fif'

    raw = mne.io.read_raw_fif(raw_fname, preload=True)
    raw.pick_types(meg=True, eeg=False, exclude='bads', stim=True)
    raw.filter(1, 30, fir_design='firwin')

    # longer + more epochs for more artifact exposure
    events = mne.find_events(raw, stim_channel='STI 014')
    epochs = mne.Epochs(raw, events, event_id=None, tmin=-0.2, tmax=0.5)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Opening raw data file /home/circleci/mne_data/MNE-sample-data/MEG/sample/sample_audvis_filt-0-40_raw.fif...
        Read a total of 4 projection items:
            PCA-v1 (1 x 102)  idle
            PCA-v2 (1 x 102)  idle
            PCA-v3 (1 x 102)  idle
            Average EEG reference (1 x 60)  idle
        Range : 6450 ... 48149 =     42.956 ...   320.665 secs
    Ready.
    Current compensation grade : 0
    Reading 0 ... 41699  =      0.000 ...   277.709 secs...
    Setting up band-pass filter from 1 - 30 Hz
    l_trans_bandwidth chosen to be 1.0 Hz
    h_trans_bandwidth chosen to be 7.5 Hz
    Filter length of 497 samples (3.310 sec) selected
    319 events found
    Event IDs: [ 1  2  3  4  5 32]
    319 matching events found
    Applying baseline correction (mode: mean)
    Not setting metadata
    Created an SSP operator (subspace dimension = 3)
    4 projection items activated


Fit ICA model using the FastICA algorithm, detect and plot components
explaining ECG artifacts.


.. code-block:: python


    ica = ICA(n_components=0.95, method='fastica').fit(epochs)

    ecg_epochs = create_ecg_epochs(raw, tmin=-.5, tmax=.5)
    ecg_inds, scores = ica.find_bads_ecg(ecg_epochs)

    ica.plot_components(ecg_inds)




.. image:: /auto_examples/preprocessing/images/sphx_glr_plot_run_ica_001.png
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Fitting ICA to data using 305 channels (please be patient, this may take a while)
    Inferring max_pca_components from picks
    Loading data for 319 events and 106 original time points ...
    0 bad epochs dropped
    Selection by explained variance: 126 components
    Loading data for 319 events and 106 original time points ...
    Fitting ICA took 25.8s.
    Reconstructing ECG signal from Magnetometers
    Setting up band-pass filter from 8 - 16 Hz
    Filter length of 2048 samples (13.639 sec) selected
    Number of ECG events detected : 284 (average pulse 61 / min.)
    284 matching events found
    No baseline correction applied
    Not setting metadata
    Created an SSP operator (subspace dimension = 3)
    Loading data for 284 events and 151 original time points ...
    0 bad epochs dropped
    Reconstructing ECG signal from Magnetometers


Plot properties of ECG components:


.. code-block:: python

    ica.plot_properties(epochs, picks=ecg_inds)



.. rst-class:: sphx-glr-horizontal


    *

      .. image:: /auto_examples/preprocessing/images/sphx_glr_plot_run_ica_002.png
            :class: sphx-glr-multi-img

    *

      .. image:: /auto_examples/preprocessing/images/sphx_glr_plot_run_ica_003.png
            :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Loading data for 319 events and 106 original time points ...
        Using multitaper spectrum estimation with 7 DPSS windows



.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  40.801 seconds)

**Estimated memory usage:**  459 MB


.. _sphx_glr_download_auto_examples_preprocessing_plot_run_ica.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_run_ica.py <plot_run_ica.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_run_ica.ipynb <plot_run_ica.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_
