

.. _example_datasets_plot_spm_faces_dataset.py:


==========================================
From raw data to dSPM on SPM Faces dataset
==========================================

Runs a full pipeline using MNE-Python:
- artifact removal
- averaging Epochs
- forward model computation
- source reconstruction using dSPM on the contrast : "faces - scrambled"

Note that this example does quite a bit of processing, so even on a
fast machine it can take about 10 minutes to complete.



.. rst-class:: horizontal


    *

      .. image:: images/plot_spm_faces_dataset_001.png
            :scale: 47

    *

      .. image:: images/plot_spm_faces_dataset_002.png
            :scale: 47

    *

      .. image:: images/plot_spm_faces_dataset_003.png
            :scale: 47

    *

      .. image:: images/plot_spm_faces_dataset_004.png
            :scale: 47

    *

      .. image:: images/plot_spm_faces_dataset_005.png
            :scale: 47

    *

      .. image:: images/plot_spm_faces_dataset_006.png
            :scale: 47

    *

      .. image:: images/plot_spm_faces_dataset_007.png
            :scale: 47

    *

      .. image:: images/plot_spm_faces_dataset_008.png
            :scale: 47


**Script output**::

  Opening raw data file /data1/agramfort/work/src/mne-python/examples/MNE-spm-face/MEG/spm/SPM_CTF_MEG_example_faces1_3D_raw.fif...
      Read 5 compensation matrices
  Current compensation grade : 3
      Range : 0 ... 324473 =      0.000 ...   675.985 secs
  Ready.
  Reading 0 ... 324473  =      0.000 ...   675.985 secs...
  [done]
  Band-pass filtering from 1 - 30 Hz
  172 events found
  Events id: [1 2 3]
  0 projection items activated
  168 matching events found
  No baseline correction applied...
  No baseline correction applied...
  No baseline correction applied...
  No baseline correction applied...
  No baseline correction applied...
  No baseline correction applied...
  No baseline correction applied...
  No baseline correction applied...
  ...



**Python source code:** :download:`plot_spm_faces_dataset.py <plot_spm_faces_dataset.py>`

.. literalinclude:: plot_spm_faces_dataset.py
    :lines: 16-

**Total running time of the example:**  177 seconds

.. raw:: html

    <div class="social-button-container">
        <div class="social-button">
            <a href="https://twitter.com/share" class="twitter-share-button">Tweet</a>
        </div>
        <div class="social-button">
            <g:plusone annotation="inline" width="120" size="medium"></g:plusone>
        </div>
        <div class="social-button">
            <div id="fb-root"></div>
            <script>(function(d, s, id) {
                var js, fjs = d.getElementsByTagName(s)[0];
                if (d.getElementById(id)) return;
                js = d.createElement(s); js.id = id;
                js.src = "//connect.facebook.net/en_US/all.js#xfbml=1";
                fjs.parentNode.insertBefore(js, fjs);
                }(document, 'script', 'facebook-jssdk'));
            </script>
            <div class="fb-like" data-send="false" data-width="450" data-show-faces="false"></div>
        </div>
    </div>
    