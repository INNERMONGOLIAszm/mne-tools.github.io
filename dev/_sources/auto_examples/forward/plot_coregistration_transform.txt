

.. _sphx_glr_auto_examples_forward_plot_coregistration_transform.py:


=========================================
Plotting head in helmet from a trans file
=========================================

In this example, the head is shown in the
MEG helmet along with the EEG electrodes in MRI
coordinate system. This allows assessing the
MEG <-> MRI coregistration quality.




.. image:: /auto_examples/forward/images/sphx_glr_plot_coregistration_transform_001.png
    :align: center


.. rst-class:: sphx-glr-script-out

 Out::

    Reading /home/ubuntu/mne_data/MNE-sample-data/MEG/sample/sample_audvis-ave.fif ...
        Read a total of 4 projection items:
            PCA-v1 (1 x 102) active
            PCA-v2 (1 x 102) active
            PCA-v3 (1 x 102) active
            Average EEG reference (1 x 60) active
        Found the data of interest:
            t =    -199.80 ...     499.49 ms (Left Auditory)
            0 CTF compensation matrices available
            nave = 55 - aspect type = 100
    Projections have already been applied. Setting proj attribute to True.
    Applying baseline correction (mode: mean)
    Using surface from /home/ubuntu/mne_data/MNE-sample-data/subjects/sample/bem/sample-5120-5120-5120-bem.fif
    Getting helmet for system 306m




|


.. code-block:: python

    # Author: Mainak Jas <mainak@neuro.hut.fi>
    #
    # License: BSD (3-clause)

    from mne import read_evokeds
    from mne.datasets import sample
    from mne.viz import plot_trans

    print(__doc__)


    data_path = sample.data_path()
    subjects_dir = data_path + '/subjects'
    evoked_fname = data_path + '/MEG/sample/sample_audvis-ave.fif'
    trans_fname = data_path + '/MEG/sample/sample_audvis_raw-trans.fif'

    condition = 'Left Auditory'
    evoked = read_evokeds(evoked_fname, condition=condition, baseline=(-0.2, 0.0))
    plot_trans(evoked.info, trans_fname, subject='sample', dig=True,
               meg_sensors=True, subjects_dir=subjects_dir)

**Total running time of the script:**
(0 minutes 0.838 seconds)



.. container:: sphx-glr-download

    **Download Python source code:** :download:`plot_coregistration_transform.py <plot_coregistration_transform.py>`


.. container:: sphx-glr-download

    **Download IPython notebook:** :download:`plot_coregistration_transform.ipynb <plot_coregistration_transform.ipynb>`
