.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_auto_examples_forward_plot_forward_sensitivity_maps.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_forward_plot_forward_sensitivity_maps.py:


================================================
Display sensitivity maps for EEG and MEG sensors
================================================

Sensitivity maps can be produced from forward operators that
indicate how well different sensor types will be able to detect
neural currents from different regions of the brain.

To get started with forward modeling see :ref:`tut_forward`.



.. code-block:: python

    # Author: Eric Larson <larson.eric.d@gmail.com>
    #
    # License: BSD (3-clause)

    import mne
    from mne.datasets import sample
    import matplotlib.pyplot as plt

    print(__doc__)

    data_path = sample.data_path()

    raw_fname = data_path + '/MEG/sample/sample_audvis_raw.fif'
    fwd_fname = data_path + '/MEG/sample/sample_audvis-meg-eeg-oct-6-fwd.fif'

    subjects_dir = data_path + '/subjects'

    # Read the forward solutions with surface orientation
    fwd = mne.read_forward_solution(fwd_fname)
    mne.convert_forward_solution(fwd, surf_ori=True, copy=False)
    leadfield = fwd['sol']['data']
    print("Leadfield size : %d x %d" % leadfield.shape)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Reading forward solution from /home/circleci/mne_data/MNE-sample-data/MEG/sample/sample_audvis-meg-eeg-oct-6-fwd.fif...
        Reading a source space...
        Computing patch statistics...
        Patch information added...
        Distance information added...
        [done]
        Reading a source space...
        Computing patch statistics...
        Patch information added...
        Distance information added...
        [done]
        2 source spaces read
        Desired named matrix (kind = 3523) not available
        Read MEG forward solution (7498 sources, 306 channels, free orientations)
        Desired named matrix (kind = 3523) not available
        Read EEG forward solution (7498 sources, 60 channels, free orientations)
        MEG and EEG forward solutions combined
        Source spaces transformed to the forward solution coordinate frame
        Average patch normals will be employed in the rotation to the local surface coordinates....
        Converting to surface-based source orientations...
        [done]
    Leadfield size : 366 x 22494


Compute sensitivity maps


.. code-block:: python


    grad_map = mne.sensitivity_map(fwd, ch_type='grad', mode='fixed')
    mag_map = mne.sensitivity_map(fwd, ch_type='mag', mode='fixed')
    eeg_map = mne.sensitivity_map(fwd, ch_type='eeg', mode='fixed')





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    204 out of 366 channels remain after picking
        102 out of 366 channels remain after picking
        60 out of 366 channels remain after picking
    Adding average EEG reference projection.


Show gain matrix a.k.a. leadfield matrix with sensitivity map


.. code-block:: python


    picks_meg = mne.pick_types(fwd['info'], meg=True, eeg=False)
    picks_eeg = mne.pick_types(fwd['info'], meg=False, eeg=True)

    fig, axes = plt.subplots(2, 1, figsize=(10, 8), sharex=True)
    fig.suptitle('Lead field matrix (500 dipoles only)', fontsize=14)
    for ax, picks, ch_type in zip(axes, [picks_meg, picks_eeg], ['meg', 'eeg']):
        im = ax.imshow(leadfield[picks, :500], origin='lower', aspect='auto',
                       cmap='RdBu_r')
        ax.set_title(ch_type.upper())
        ax.set_xlabel('sources')
        ax.set_ylabel('sensors')
        plt.colorbar(im, ax=ax, cmap='RdBu_r')
    plt.show()

    plt.figure()
    plt.hist([grad_map.data.ravel(), mag_map.data.ravel(), eeg_map.data.ravel()],
             bins=20, label=['Gradiometers', 'Magnetometers', 'EEG'],
             color=['c', 'b', 'k'])
    plt.legend()
    plt.title('Normal orientation sensitivity')
    plt.xlabel('sensitivity')
    plt.ylabel('count')
    plt.show()

    grad_map.plot(time_label='Gradiometer sensitivity', subjects_dir=subjects_dir,
                  clim=dict(lims=[0, 50, 100]))



.. rst-class:: sphx-glr-horizontal


    *

      .. image:: /auto_examples/forward/images/sphx_glr_plot_forward_sensitivity_maps_001.png
            :class: sphx-glr-multi-img

    *

      .. image:: /auto_examples/forward/images/sphx_glr_plot_forward_sensitivity_maps_002.png
            :class: sphx-glr-multi-img

.. image:: /auto_examples/forward/images/sphx_glr_plot_forward_sensitivity_maps_003.png
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Using control points [0.02108201 0.32186553 1.        ]



.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  11.326 seconds)

**Estimated memory usage:**  10 MB


.. _sphx_glr_download_auto_examples_forward_plot_forward_sensitivity_maps.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_forward_sensitivity_maps.py <plot_forward_sensitivity_maps.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_forward_sensitivity_maps.ipynb <plot_forward_sensitivity_maps.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_
