

.. _sphx_glr_auto_examples_forward_plot_make_forward.py:


======================================================
Create a forward operator and display sensitivity maps
======================================================

Sensitivity maps can be produced from forward operators that
indicate how well different sensor types will be able to detect
neural currents from different regions of the brain.


.. code-block:: python

    # Author: Eric Larson <larson.eric.d@gmail.com>
    #
    # License: BSD (3-clause)

    import mne
    from mne.datasets import sample
    import matplotlib.pyplot as plt

    print(__doc__)

    data_path = sample.data_path()

    raw_fname = data_path + '/MEG/sample/sample_audvis_raw.fif'
    trans = data_path + '/MEG/sample/sample_audvis_raw-trans.fif'
    src = data_path + '/subjects/sample/bem/sample-oct-6-src.fif'
    bem = data_path + '/subjects/sample/bem/sample-5120-5120-5120-bem-sol.fif'
    subjects_dir = data_path + '/subjects'

    # Note that forward solutions can also be read with read_forward_solution
    fwd = mne.make_forward_solution(raw_fname, trans, src, bem,
                                    fname=None, meg=True, eeg=True, mindist=5.0,
                                    n_jobs=1, overwrite=True)

    # convert to surface orientation for better visualization
    fwd = mne.convert_forward_solution(fwd, surf_ori=True)
    leadfield = fwd['sol']['data']

    print("Leadfield size : %d x %d" % leadfield.shape)

    grad_map = mne.sensitivity_map(fwd, ch_type='grad', mode='fixed')
    mag_map = mne.sensitivity_map(fwd, ch_type='mag', mode='fixed')
    eeg_map = mne.sensitivity_map(fwd, ch_type='eeg', mode='fixed')





.. rst-class:: sphx-glr-script-out

 Out::

    Source space                 : /home/ubuntu/mne_data/MNE-sample-data/subjects/sample/bem/sample-oct-6-src.fif
    MRI -> head transform source : /home/ubuntu/mne_data/MNE-sample-data/MEG/sample/sample_audvis_raw-trans.fif
    Measurement data             : sample_audvis_raw.fif
    BEM model                    : /home/ubuntu/mne_data/MNE-sample-data/subjects/sample/bem/sample-5120-5120-5120-bem-sol.fif
    Accurate field computations
    Do computations in head coordinates
    Free source orientations
    Destination for the solution : None

    Reading /home/ubuntu/mne_data/MNE-sample-data/subjects/sample/bem/sample-oct-6-src.fif...
    Read 2 source spaces a total of 8196 active source locations

    Coordinate transformation: MRI (surface RAS) -> head
         0.999310  0.009985 -0.035787      -3.17 mm
         0.012759  0.812405  0.582954       6.86 mm
         0.034894 -0.583008  0.811716      28.88 mm
         0.000000  0.000000  0.000000       1.00

    Read 306 MEG channels from info
    69 coil definitions read
    Coordinate transformation: MEG device -> head
         0.991420 -0.039936 -0.124467      -6.13 mm
         0.060661  0.984012  0.167456       0.06 mm
         0.115790 -0.173570  0.977991      64.74 mm
         0.000000  0.000000  0.000000       1.00
    MEG coil definitions created in head coordinates.
    Read  60 EEG channels from info
    Head coordinate coil definitions created.
    Source spaces are now in head coordinates.

    Setting up the BEM model using /home/ubuntu/mne_data/MNE-sample-data/subjects/sample/bem/sample-5120-5120-5120-bem-sol.fif...

    Loading surfaces...
    Three-layer model surfaces loaded.

    Loading the solution matrix...

    Loaded linear_collocation BEM solution from /home/ubuntu/mne_data/MNE-sample-data/subjects/sample/bem/sample-5120-5120-5120-bem-sol.fif
    Employing the head->MRI coordinate transform with the BEM model.
    BEM model sample-5120-5120-5120-bem-sol.fif is now set up

    Source spaces are in head coordinates.
    Checking that the sources are inside the bounding surface and at least    5.0 mm away (will take a few...)
    2 source space points omitted because they are outside the inner skull surface.
    364 source space points omitted because of the    5.0-mm distance limit.
    1 source space point omitted because it is outside the inner skull surface.
    331 source space point omitted because of the    5.0-mm distance limit.
    Thank you for waiting.

    Setting up compensation data...
        No compensation set. Nothing more to do.

    Composing the field computation matrix...
    Computing MEG at 7498 source locations (free orientations)...
    Computing EEG at 7498 source locations (free orientations)...

    Finished.
        Converting to surface-based source orientations...
    [done]
    Leadfield size : 366 x 22494
        204 out of 366 channels remain after picking
        102 out of 366 channels remain after picking
        60 out of 366 channels remain after picking
    Adding average EEG reference projection.


Show gain matrix a.k.a. leadfield matrix with sensitivity map


.. code-block:: python


    picks_meg = mne.pick_types(fwd['info'], meg=True, eeg=False)
    picks_eeg = mne.pick_types(fwd['info'], meg=False, eeg=True)

    fig, axes = plt.subplots(2, 1, figsize=(10, 8), sharex=True)
    fig.suptitle('Lead field matrix (500 dipoles only)', fontsize=14)
    for ax, picks, ch_type in zip(axes, [picks_meg, picks_eeg], ['meg', 'eeg']):
        im = ax.imshow(leadfield[picks, :500], origin='lower', aspect='auto',
                       cmap='RdBu_r')
        ax.set_title(ch_type.upper())
        ax.set_xlabel('sources')
        ax.set_ylabel('sensors')
        plt.colorbar(im, ax=ax, cmap='RdBu_r')
    plt.show()

    plt.figure()
    plt.hist([grad_map.data.ravel(), mag_map.data.ravel(), eeg_map.data.ravel()],
             bins=20, label=['Gradiometers', 'Magnetometers', 'EEG'],
             color=['c', 'b', 'k'])
    plt.legend()
    plt.title('Normal orientation sensitivity')
    plt.xlabel('sensitivity')
    plt.ylabel('count')
    plt.show()

    grad_map.plot(time_label='Gradiometer sensitivity', subjects_dir=subjects_dir,
                  clim=dict(lims=[0, 50, 100]))



.. rst-class:: sphx-glr-horizontal


    *

      .. image:: /auto_examples/forward/images/sphx_glr_plot_make_forward_001.png
            :scale: 47

    *

      .. image:: /auto_examples/forward/images/sphx_glr_plot_make_forward_002.png
            :scale: 47

    *

      .. image:: /auto_examples/forward/images/sphx_glr_plot_make_forward_003.png
            :scale: 47


.. rst-class:: sphx-glr-script-out

 Out::

    Updating smoothing matrix, be patient..
    Smoothing matrix creation, step 1
    Smoothing matrix creation, step 2
    Smoothing matrix creation, step 3
    Smoothing matrix creation, step 4
    Smoothing matrix creation, step 5
    Smoothing matrix creation, step 6
    Smoothing matrix creation, step 7
    Smoothing matrix creation, step 8
    Smoothing matrix creation, step 9
    Smoothing matrix creation, step 10
    colormap: fmin=1.98e-02 fmid=3.41e-01 fmax=1.00e+00 transparent=1


**Total running time of the script:**
(1 minutes 15.373 seconds)



.. container:: sphx-glr-download

    **Download Python source code:** :download:`plot_make_forward.py <plot_make_forward.py>`


.. container:: sphx-glr-download

    **Download IPython notebook:** :download:`plot_make_forward.ipynb <plot_make_forward.ipynb>`
