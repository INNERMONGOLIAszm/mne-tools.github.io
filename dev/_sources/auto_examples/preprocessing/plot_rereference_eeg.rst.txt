.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_auto_examples_preprocessing_plot_rereference_eeg.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_preprocessing_plot_rereference_eeg.py:


=============================
Re-referencing the EEG signal
=============================

This example shows how to load raw data and apply some EEG referencing schemes.



.. code-block:: python

    # Authors: Marijn van Vliet <w.m.vanvliet@gmail.com>
    #          Alexandre Gramfort <alexandre.gramfort@telecom-paristech.fr>
    #
    # License: BSD (3-clause)

    import mne
    from mne.datasets import sample
    from matplotlib import pyplot as plt

    print(__doc__)

    # Setup for reading the raw data
    data_path = sample.data_path()
    raw_fname = data_path + '/MEG/sample/sample_audvis_filt-0-40_raw.fif'
    event_fname = data_path + '/MEG/sample/sample_audvis_filt-0-40_raw-eve.fif'
    event_id, tmin, tmax = 1, -0.2, 0.5

    # Read the raw data
    raw = mne.io.read_raw_fif(raw_fname, preload=True)
    events = mne.read_events(event_fname)

    # The EEG channels will be plotted to visualize the difference in referencing
    # schemes.
    picks = mne.pick_types(raw.info, meg=False, eeg=True, eog=True, exclude='bads')





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Opening raw data file /home/circleci/mne_data/MNE-sample-data/MEG/sample/sample_audvis_filt-0-40_raw.fif...
        Read a total of 4 projection items:
            PCA-v1 (1 x 102)  idle
            PCA-v2 (1 x 102)  idle
            PCA-v3 (1 x 102)  idle
            Average EEG reference (1 x 60)  idle
        Range : 6450 ... 48149 =     42.956 ...   320.665 secs
    Ready.
    Current compensation grade : 0
    Reading 0 ... 41699  =      0.000 ...   277.709 secs...


We will now apply different EEG referencing schemes and plot the resulting
evoked potentials. Note that when we construct epochs with ``mne.Epochs``, we
supply the ``proj=True`` argument. This means that any available projectors
are applied automatically. Specifically, if there is an average reference
projector set by ``raw.set_eeg_reference('average', projection=True)``, MNE
applies this projector when creating epochs.



.. code-block:: python


    reject = dict(eog=150e-6)
    epochs_params = dict(events=events, event_id=event_id, tmin=tmin, tmax=tmax,
                         picks=picks, reject=reject, proj=True)

    fig, (ax1, ax2, ax3) = plt.subplots(nrows=3, ncols=1, sharex=True)

    # No reference. This assumes that the EEG has already been referenced properly.
    # This explicitly prevents MNE from adding a default EEG reference. Any average
    # reference projector is automatically removed.
    raw.set_eeg_reference([])
    evoked_no_ref = mne.Epochs(raw, **epochs_params).average()

    evoked_no_ref.plot(axes=ax1, titles=dict(eeg='Original reference'), show=False,
                       time_unit='s')

    # Average reference. This is normally added by default, but can also be added
    # explicitly.
    raw.set_eeg_reference('average', projection=True)
    evoked_car = mne.Epochs(raw, **epochs_params).average()

    evoked_car.plot(axes=ax2, titles=dict(eeg='Average reference'), show=False,
                    time_unit='s')

    # Re-reference from an average reference to the mean of channels EEG 001 and
    # EEG 002.
    raw.set_eeg_reference(['EEG 001', 'EEG 002'])
    evoked_custom = mne.Epochs(raw, **epochs_params).average()

    evoked_custom.plot(axes=ax3, titles=dict(eeg='Custom reference'),
                       time_unit='s')



.. image:: /auto_examples/preprocessing/images/sphx_glr_plot_rereference_eeg_001.png
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    EEG data marked as already having the desired reference. Preventing automatic future re-referencing to an average reference.
    Removing existing average EEG reference projection.
    Created an SSP operator (subspace dimension = 3)
    72 matching events found
    Applying baseline correction (mode: mean)
    Not setting metadata
    3 projection items activated
        Rejecting  epoch based on EOG : ['EOG 061']
        Rejecting  epoch based on EOG : ['EOG 061']
        Rejecting  epoch based on EOG : ['EOG 061']
        Rejecting  epoch based on EOG : ['EOG 061']
        Rejecting  epoch based on EOG : ['EOG 061']
        Rejecting  epoch based on EOG : ['EOG 061']
        Rejecting  epoch based on EOG : ['EOG 061']
        Rejecting  epoch based on EOG : ['EOG 061']
        Rejecting  epoch based on EOG : ['EOG 061']
        Rejecting  epoch based on EOG : ['EOG 061']
        Rejecting  epoch based on EOG : ['EOG 061']
        Rejecting  epoch based on EOG : ['EOG 061']
        Rejecting  epoch based on EOG : ['EOG 061']
        Rejecting  epoch based on EOG : ['EOG 061']
        Rejecting  epoch based on EOG : ['EOG 061']
        Rejecting  epoch based on EOG : ['EOG 061']
    Adding average EEG reference projection.
    1 projection items deactivated
    Average reference projection was added, but has not been applied yet. Use the apply_proj method to apply it.
    72 matching events found
    Applying baseline correction (mode: mean)
    Not setting metadata
    Created an SSP operator (subspace dimension = 1)
    4 projection items activated
        Rejecting  epoch based on EOG : ['EOG 061']
        Rejecting  epoch based on EOG : ['EOG 061']
        Rejecting  epoch based on EOG : ['EOG 061']
        Rejecting  epoch based on EOG : ['EOG 061']
        Rejecting  epoch based on EOG : ['EOG 061']
        Rejecting  epoch based on EOG : ['EOG 061']
        Rejecting  epoch based on EOG : ['EOG 061']
        Rejecting  epoch based on EOG : ['EOG 061']
        Rejecting  epoch based on EOG : ['EOG 061']
        Rejecting  epoch based on EOG : ['EOG 061']
        Rejecting  epoch based on EOG : ['EOG 061']
        Rejecting  epoch based on EOG : ['EOG 061']
        Rejecting  epoch based on EOG : ['EOG 061']
        Rejecting  epoch based on EOG : ['EOG 061']
        Rejecting  epoch based on EOG : ['EOG 061']
        Rejecting  epoch based on EOG : ['EOG 061']
    Applying a custom EEG reference.
    Removing existing average EEG reference projection.
    Created an SSP operator (subspace dimension = 3)
    72 matching events found
    Applying baseline correction (mode: mean)
    Not setting metadata
    3 projection items activated
        Rejecting  epoch based on EOG : ['EOG 061']
        Rejecting  epoch based on EOG : ['EOG 061']
        Rejecting  epoch based on EOG : ['EOG 061']
        Rejecting  epoch based on EOG : ['EOG 061']
        Rejecting  epoch based on EOG : ['EOG 061']
        Rejecting  epoch based on EOG : ['EOG 061']
        Rejecting  epoch based on EOG : ['EOG 061']
        Rejecting  epoch based on EOG : ['EOG 061']
        Rejecting  epoch based on EOG : ['EOG 061']
        Rejecting  epoch based on EOG : ['EOG 061']
        Rejecting  epoch based on EOG : ['EOG 061']
        Rejecting  epoch based on EOG : ['EOG 061']
        Rejecting  epoch based on EOG : ['EOG 061']
        Rejecting  epoch based on EOG : ['EOG 061']
        Rejecting  epoch based on EOG : ['EOG 061']
        Rejecting  epoch based on EOG : ['EOG 061']


**Total running time of the script:** ( 0 minutes  2.930 seconds)


.. _sphx_glr_download_auto_examples_preprocessing_plot_rereference_eeg.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_rereference_eeg.py <plot_rereference_eeg.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_rereference_eeg.ipynb <plot_rereference_eeg.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_
