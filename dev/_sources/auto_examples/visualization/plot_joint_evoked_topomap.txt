

.. _sphx_glr_auto_examples_visualization_plot_joint_evoked_topomap.py:


=============================================
Joint topomap and time series plot of ERF/ERP
=============================================

Load evoked data and plot.




.. image:: /auto_examples/visualization/images/sphx_glr_plot_joint_evoked_topomap_001.png
    :align: center


.. rst-class:: sphx-glr-script-out

 Out::

    Reading /home/ubuntu/mne_data/MNE-sample-data/MEG/sample/sample_audvis-ave.fif ...
        Read a total of 4 projection items:
            PCA-v1 (1 x 102) active
            PCA-v2 (1 x 102) active
            PCA-v3 (1 x 102) active
            Average EEG reference (1 x 60) active
        Found the data of interest:
            t =    -199.80 ...     499.49 ms (Left Auditory)
            0 CTF compensation matrices available
            nave = 55 - aspect type = 100
    Projections have already been applied. Setting proj attribute to True.
    Applying baseline correction (mode: mean)




|


.. code-block:: python

    # Authors: Jona Sassenhagen <jona.sassenhagen@gmail.com>
    #
    # License: BSD (3-clause)

    import matplotlib.pyplot as plt
    from mne.datasets import sample
    from mne import read_evokeds

    print(__doc__)

    path = sample.data_path()
    fname = path + '/MEG/sample/sample_audvis-ave.fif'

    # load evoked and subtract baseline
    condition = 'Left Auditory'
    evoked = read_evokeds(fname, condition=condition,
                          baseline=(None, 0)).pick_types(meg='grad', eeg=False)

    # Plot the evoked response with spatially color coded lines,
    # topomaps for specified times, and the Global Field Power, but no sensors
    ts_args = dict(gfp=True)
    topomap_args = dict(sensors=False)
    evoked.plot_joint(title=condition, times=[.07, .105],
                      ts_args=ts_args, topomap_args=topomap_args)

    plt.show()

**Total running time of the script:**
(0 minutes 1.888 seconds)



.. container:: sphx-glr-download

    **Download Python source code:** :download:`plot_joint_evoked_topomap.py <plot_joint_evoked_topomap.py>`


.. container:: sphx-glr-download

    **Download IPython notebook:** :download:`plot_joint_evoked_topomap.ipynb <plot_joint_evoked_topomap.ipynb>`
