

.. _sphx_glr_auto_examples_visualization_plot_topo_channel_epochs_image.py:


============================================================
Visualize channel over epochs as images in sensor topography
============================================================

This will produce what is sometimes called event related
potential / field (ERP/ERF) images.

One sensor topography plot is produced with the evoked field images from
the selected channels.


.. code-block:: python

    # Authors: Alexandre Gramfort <alexandre.gramfort@telecom-paristech.fr>
    #          Denis Engemann <denis.engemann@gmail.com>
    #
    # License: BSD (3-clause)

    import matplotlib.pyplot as plt

    import mne
    from mne import io
    from mne.datasets import sample

    print(__doc__)

    data_path = sample.data_path()







Set parameters


.. code-block:: python

    raw_fname = data_path + '/MEG/sample/sample_audvis_filt-0-40_raw.fif'
    event_fname = data_path + '/MEG/sample/sample_audvis_filt-0-40_raw-eve.fif'
    event_id, tmin, tmax = 1, -0.2, 0.5

    # Setup for reading the raw data
    raw = io.read_raw_fif(raw_fname)
    events = mne.read_events(event_fname)

    # Set up pick list: EEG + MEG - bad channels (modify to your needs)
    raw.info['bads'] = ['MEG 2443', 'EEG 053']
    picks = mne.pick_types(raw.info, meg='grad', eeg=False, stim=True, eog=True,
                           exclude='bads')

    # Plot sensors in 3d
    raw.plot_sensors(kind='3d', ch_type='grad')

    # Read epochs
    epochs = mne.Epochs(raw, events, event_id, tmin, tmax, proj=True,
                        picks=picks, baseline=(None, 0), preload=True,
                        reject=dict(grad=4000e-13, eog=150e-6))




.. image:: /auto_examples/visualization/images/sphx_glr_plot_topo_channel_epochs_image_001.png
    :align: center


.. rst-class:: sphx-glr-script-out

 Out::

    Opening raw data file /home/ubuntu/mne_data/MNE-sample-data/MEG/sample/sample_audvis_filt-0-40_raw.fif...
        Read a total of 4 projection items:
            PCA-v1 (1 x 102)  idle
            PCA-v2 (1 x 102)  idle
            PCA-v3 (1 x 102)  idle
            Average EEG reference (1 x 60)  idle
    Current compensation grade : 0
        Range : 6450 ... 48149 =     42.956 ...   320.665 secs
    Ready.
    72 matching events found
    Applying baseline correction (mode: mean)
    4 projection items activated
    Loading data for 72 events and 106 original time points ...
        Rejecting  epoch based on EOG : [u'EOG 061']
        Rejecting  epoch based on EOG : [u'EOG 061']
        Rejecting  epoch based on EOG : [u'EOG 061']
        Rejecting  epoch based on EOG : [u'EOG 061']
        Rejecting  epoch based on EOG : [u'EOG 061']
        Rejecting  epoch based on EOG : [u'EOG 061']
        Rejecting  epoch based on EOG : [u'EOG 061']
        Rejecting  epoch based on EOG : [u'EOG 061']
        Rejecting  epoch based on EOG : [u'EOG 061']
        Rejecting  epoch based on EOG : [u'EOG 061']
        Rejecting  epoch based on EOG : [u'EOG 061']
        Rejecting  epoch based on EOG : [u'EOG 061']
        Rejecting  epoch based on EOG : [u'EOG 061']
        Rejecting  epoch based on EOG : [u'EOG 061']
        Rejecting  epoch based on EOG : [u'EOG 061']
        Rejecting  epoch based on EOG : [u'EOG 061']
    16 bad epochs dropped


Show event related fields images


.. code-block:: python


    layout = mne.find_layout(epochs.info, 'meg')  # use full layout

    title = 'ERF images - MNE sample data'
    mne.viz.plot_topo_image_epochs(epochs, layout, sigma=0.5, vmin=-200, vmax=200,
                                   colorbar=True, title=title)
    plt.show()



.. image:: /auto_examples/visualization/images/sphx_glr_plot_topo_channel_epochs_image_002.png
    :align: center




**Total running time of the script:**
(0 minutes 0.587 seconds)



.. container:: sphx-glr-download

    **Download Python source code:** :download:`plot_topo_channel_epochs_image.py <plot_topo_channel_epochs_image.py>`


.. container:: sphx-glr-download

    **Download IPython notebook:** :download:`plot_topo_channel_epochs_image.ipynb <plot_topo_channel_epochs_image.ipynb>`
