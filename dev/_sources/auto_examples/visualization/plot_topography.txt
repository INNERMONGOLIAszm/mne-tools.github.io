

.. _sphx_glr_auto_examples_visualization_plot_topography.py:


=================================
Plot topographies for MEG sensors
=================================



.. code-block:: python

    # Author: Alexandre Gramfort <alexandre.gramfort@telecom-paristech.fr>
    #
    # License: BSD (3-clause)

    import matplotlib.pyplot as plt

    from mne import read_evokeds
    from mne.viz import plot_evoked_topo
    from mne.datasets import sample

    print(__doc__)

    data_path = sample.data_path()

    fname = data_path + '/MEG/sample/sample_audvis-ave.fif'

    # Reading
    condition = 'Left Auditory'
    evoked = read_evokeds(fname, condition=condition, baseline=(None, 0))





.. rst-class:: sphx-glr-script-out

 Out::

    Reading /home/ubuntu/mne_data/MNE-sample-data/MEG/sample/sample_audvis-ave.fif ...
        Read a total of 4 projection items:
            PCA-v1 (1 x 102) active
            PCA-v2 (1 x 102) active
            PCA-v3 (1 x 102) active
            Average EEG reference (1 x 60) active
        Found the data of interest:
            t =    -199.80 ...     499.49 ms (Left Auditory)
            0 CTF compensation matrices available
            nave = 55 - aspect type = 100
    Projections have already been applied. Setting proj attribute to True.
    Applying baseline correction (mode: mean)


Show topography.
For Neuromag data, you can use merge_grads=True to plot
RMS values of gradiometer pairs.


.. code-block:: python

    title = 'MNE sample data (condition : %s)' % evoked.comment
    plot_evoked_topo(evoked, title=title, merge_grads=False)
    plt.show()



.. image:: /auto_examples/visualization/images/sphx_glr_plot_topography_001.png
    :align: center




**Total running time of the script:**
(0 minutes 2.105 seconds)



.. container:: sphx-glr-download

    **Download Python source code:** :download:`plot_topography.py <plot_topography.py>`


.. container:: sphx-glr-download

    **Download IPython notebook:** :download:`plot_topography.ipynb <plot_topography.ipynb>`
