

.. _sphx_glr_auto_tutorials_plot_dipole_fit.py:


==========================================
Source localization with single dipole fit
==========================================

This shows how to fit a dipole using mne-python.

For a comparison of fits between MNE-C and mne-python, see:

    https://gist.github.com/Eric89GXL/ca55f791200fe1dc3dd2

Note that for 3D graphics you may need to choose a specific IPython
backend, such as:

`%matplotlib qt` or `%matplotlib wx`



.. code-block:: python


    from os import path as op
    import numpy as np
    import matplotlib.pyplot as plt

    import mne
    from mne.forward import make_forward_dipole
    from mne.evoked import combine_evoked
    from mne.simulation import simulate_evoked

    data_path = mne.datasets.sample.data_path()
    subjects_dir = op.join(data_path, 'subjects')
    fname_ave = op.join(data_path, 'MEG', 'sample', 'sample_audvis-ave.fif')
    fname_cov = op.join(data_path, 'MEG', 'sample', 'sample_audvis-cov.fif')
    fname_bem = op.join(subjects_dir, 'sample', 'bem', 'sample-5120-bem-sol.fif')
    fname_trans = op.join(data_path, 'MEG', 'sample',
                          'sample_audvis_raw-trans.fif')
    fname_surf_lh = op.join(subjects_dir, 'sample', 'surf', 'lh.white')







Let's localize the N100m (using MEG only)



.. code-block:: python

    evoked = mne.read_evokeds(fname_ave, condition='Right Auditory',
                              baseline=(None, 0))
    evoked.pick_types(meg=True, eeg=False)
    evoked_full = evoked.copy()
    evoked.crop(0.07, 0.08)

    # Fit a dipole
    dip = mne.fit_dipole(evoked, fname_cov, fname_bem, fname_trans)[0]

    # Plot the result in 3D brain
    dip.plot_locations(fname_trans, 'sample', subjects_dir)




.. image:: /auto_tutorials/images/sphx_glr_plot_dipole_fit_001.png
    :align: center


.. rst-class:: sphx-glr-script-out

 Out::

    Reading /home/ubuntu/mne_data/MNE-sample-data/MEG/sample/sample_audvis-ave.fif ...
        Read a total of 4 projection items:
            PCA-v1 (1 x 102) active
            PCA-v2 (1 x 102) active
            PCA-v3 (1 x 102) active
            Average EEG reference (1 x 60) active
        Found the data of interest:
            t =    -199.80 ...     499.49 ms (Right Auditory)
            0 CTF compensation matrices available
            nave = 61 - aspect type = 100
    Projections have already been applied. Setting proj attribute to True.
    No baseline correction applied
    Applying baseline correction (mode: mean)
    MRI transform     : /home/ubuntu/mne_data/MNE-sample-data/MEG/sample/sample_audvis_raw-trans.fif
    Head origin       :   -4.3   18.4   67.0 mm rad =   71.8 mm.
    Guess grid        :   20.0 mm
    Guess mindist     :    5.0 mm
    Guess exclude     :   20.0 mm
    Using standard MEG coil definitions.
    Noise covariance  : /home/ubuntu/mne_data/MNE-sample-data/MEG/sample/sample_audvis-cov.fif

    Coordinate transformation: MRI (surface RAS) -> head
         0.999310  0.009985 -0.035787      -3.17 mm
         0.012759  0.812405  0.582954       6.86 mm
         0.034894 -0.583008  0.811716      28.88 mm
         0.000000  0.000000  0.000000       1.00
    Coordinate transformation: MEG device -> head
         0.991420 -0.039936 -0.124467      -6.13 mm
         0.060661  0.984012  0.167456       0.06 mm
         0.115790 -0.173570  0.977991      64.74 mm
         0.000000  0.000000  0.000000       1.00
    0 bad channels total
    Read 305 MEG channels from info
    72 coil definitions read
    Coordinate transformation: MEG device -> head
         0.991420 -0.039936 -0.124467      -6.13 mm
         0.060661  0.984012  0.167456       0.06 mm
         0.115790 -0.173570  0.977991      64.74 mm
         0.000000  0.000000  0.000000       1.00
    MEG coil definitions created in head coordinates.
    Decomposing the sensor noise covariance matrix...

    ---- Computing the forward solution for the guesses...
    Guess surface (inner_skull) is in MRI (surface RAS) coordinates
    Filtering (grid =     20 mm)...
    Surface CM = (   0.7  -10.0   44.3) mm
    Surface fits inside a sphere with radius   91.8 mm
    Surface extent:
        x =  -66.7 ...   68.8 mm
        y =  -88.0 ...   79.0 mm
        z =  -44.5 ...  105.8 mm
    Grid extent:
        x =  -80.0 ...   80.0 mm
        y = -100.0 ...   80.0 mm
        z =  -60.0 ...  120.0 mm
    900 sources before omitting any.
    396 sources after omitting infeasible sources.
    Source spaces are in MRI coordinates.
    Checking that the sources are inside the bounding surface and at least    5.0 mm away (will take a few...)
    195 source space points omitted because they are outside the inner skull surface.
    45 source space points omitted because of the    5.0-mm distance limit.
    Thank you for waiting.
    156 sources remaining after excluding the sources outside the surface and less than    5.0 mm inside.
    Go through all guess source locations...
    [done 156 sources]
    ---- Fitted :    69.9 ms, distance to inner skull : 10.7310 mm
    ---- Fitted :    71.6 ms, distance to inner skull : 10.6941 mm
    ---- Fitted :    73.3 ms, distance to inner skull : 10.5323 mm
    ---- Fitted :    74.9 ms, distance to inner skull : 10.2965 mm
    ---- Fitted :    76.6 ms, distance to inner skull : 10.0605 mm
    ---- Fitted :    78.3 ms, distance to inner skull : 9.7598 mm
    ---- Fitted :    79.9 ms, distance to inner skull : 9.4796 mm
    7 time points fitted
    Triangle file: Converted tri file nvert = 2562 ntri = 5120


Calculate and visualise magnetic field predicted by dipole with maximum GOF
and compare to the measured data, highlighting the ipsilateral (right) source



.. code-block:: python

    fwd, stc = make_forward_dipole(dip, fname_bem, evoked.info, fname_trans)
    pred_evoked = simulate_evoked(fwd, stc, evoked.info, None, snr=np.inf)

    # find time point with highes GOF to plot
    best_idx = np.argmax(dip.gof)
    best_time = dip.times[best_idx]
    # rememeber to create a subplot for the colorbar
    fig, axes = plt.subplots(nrows=1, ncols=4, figsize=[10., 3.4])
    vmin, vmax = -400, 400  # make sure each plot has same colour range

    # first plot the topography at the time of the best fitting (single) dipole
    plot_params = dict(times=best_time, ch_type='mag', outlines='skirt',
                       colorbar=False)
    evoked.plot_topomap(time_format='Measured field', axes=axes[0], **plot_params)

    # compare this to the predicted field
    pred_evoked.plot_topomap(time_format='Predicted field', axes=axes[1],
                             **plot_params)

    # Subtract predicted from measured data (apply equal weights)
    diff = combine_evoked([evoked, -pred_evoked], weights='equal')
    plot_params['colorbar'] = True
    diff.plot_topomap(time_format='Difference', axes=axes[2], **plot_params)
    plt.suptitle('Comparison of measured and predicted fields '
                 'at {:.0f} ms'.format(best_time * 1000.), fontsize=16)




.. image:: /auto_tutorials/images/sphx_glr_plot_dipole_fit_002.png
    :align: center


.. rst-class:: sphx-glr-script-out

 Out::

    Positions (in meters) and orientations
    7 sources
    Source space                 : <SourceSpaces: [<discrete, n_used=7, coordinate_frame=head>]>
    MRI -> head transform source : /home/ubuntu/mne_data/MNE-sample-data/MEG/sample/sample_audvis_raw-trans.fif
    Measurement data             : instance of Info
    BEM model                    : /home/ubuntu/mne_data/MNE-sample-data/subjects/sample/bem/sample-5120-bem-sol.fif
    Accurate field computations
    Do computations in head coordinates
    Free source orientations
    Destination for the solution : None

    Read 1 source spaces a total of 7 active source locations

    Coordinate transformation: MRI (surface RAS) -> head
         0.999310  0.009985 -0.035787      -3.17 mm
         0.012759  0.812405  0.582954       6.86 mm
         0.034894 -0.583008  0.811716      28.88 mm
         0.000000  0.000000  0.000000       1.00

    Read 305 MEG channels from info
    72 coil definitions read
    Coordinate transformation: MEG device -> head
         0.991420 -0.039936 -0.124467      -6.13 mm
         0.060661  0.984012  0.167456       0.06 mm
         0.115790 -0.173570  0.977991      64.74 mm
         0.000000  0.000000  0.000000       1.00
    MEG coil definitions created in head coordinates.
    Source spaces are now in head coordinates.

    Setting up the BEM model using /home/ubuntu/mne_data/MNE-sample-data/subjects/sample/bem/sample-5120-bem-sol.fif...

    Loading surfaces...
    Homogeneous model surface loaded.

    Loading the solution matrix...

    Loaded linear_collocation BEM solution from /home/ubuntu/mne_data/MNE-sample-data/subjects/sample/bem/sample-5120-bem-sol.fif
    Employing the head->MRI coordinate transform with the BEM model.
    BEM model sample-5120-bem-sol.fif is now set up

    Source spaces are in head coordinates.
    Checking that the sources are inside the bounding surface (will take a few...)
    Thank you for waiting.

    Setting up compensation data...
        No compensation set. Nothing more to do.

    Composing the field computation matrix...
    Computing MEG at 7 source locations (free orientations)...

    Finished.
        Changing to fixed-orientation forward solution with surface-based source orientations...
        [done]
    Projecting source estimate to sensor space...
    [done]
    Colorbar is drawn to the rightmost column of the figure. Be sure to provide enough space for it or turn it off with colorbar=False.


Estimate the time course of a single dipole with fixed position and
orientation (the one that maximized GOF)over the entire interval



.. code-block:: python

    dip_fixed = mne.fit_dipole(evoked_full, fname_cov, fname_bem, fname_trans,
                               pos=dip.pos[best_idx], ori=dip.ori[best_idx])[0]
    dip_fixed.plot()



.. image:: /auto_tutorials/images/sphx_glr_plot_dipole_fit_003.png
    :align: center


.. rst-class:: sphx-glr-script-out

 Out::

    MRI transform     : /home/ubuntu/mne_data/MNE-sample-data/MEG/sample/sample_audvis_raw-trans.fif
    Head origin       :   -4.3   18.4   67.0 mm rad =   71.8 mm.
    Fixed position    :  -61.1    5.4   59.6 mm
    Fixed orientation  : 0.0108 -0.7503 -0.6610 mm
    Noise covariance  : /home/ubuntu/mne_data/MNE-sample-data/MEG/sample/sample_audvis-cov.fif

    Coordinate transformation: MRI (surface RAS) -> head
         0.999310  0.009985 -0.035787      -3.17 mm
         0.012759  0.812405  0.582954       6.86 mm
         0.034894 -0.583008  0.811716      28.88 mm
         0.000000  0.000000  0.000000       1.00
    Coordinate transformation: MEG device -> head
         0.991420 -0.039936 -0.124467      -6.13 mm
         0.060661  0.984012  0.167456       0.06 mm
         0.115790 -0.173570  0.977991      64.74 mm
         0.000000  0.000000  0.000000       1.00
    0 bad channels total
    Read 305 MEG channels from info
    72 coil definitions read
    Coordinate transformation: MEG device -> head
         0.991420 -0.039936 -0.124467      -6.13 mm
         0.060661  0.984012  0.167456       0.06 mm
         0.115790 -0.173570  0.977991      64.74 mm
         0.000000  0.000000  0.000000       1.00
    MEG coil definitions created in head coordinates.
    Decomposing the sensor noise covariance matrix...
    Compute forward for dipole location...
    [done 1 source]
    421 time points fitted


**Total running time of the script:**
(0 minutes 33.016 seconds)



.. container:: sphx-glr-download

    :download:`Download Python source code: plot_dipole_fit.py <plot_dipole_fit.py>`


.. container:: sphx-glr-download

    :download:`Download Jupyter notebook: plot_dipole_fit.ipynb <plot_dipole_fit.ipynb>`

.. rst-class:: sphx-glr-signature

    `Generated by Sphinx-Gallery <http://sphinx-gallery.readthedocs.io>`_
