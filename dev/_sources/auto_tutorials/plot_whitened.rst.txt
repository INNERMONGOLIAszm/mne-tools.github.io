.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_auto_tutorials_plot_whitened.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_tutorials_plot_whitened.py:


Plotting whitened data
======================

This tutorial demonstrates how to plot whitened evoked data.

Data are whitened for many processes, including dipole fitting, source
localization and some decoding algorithms. Viewing whitened data thus gives
a different perspective on the data that these algorithms operate on.

Let's start by loading some data and computing a signal (spatial) covariance
that we'll consider to be noise.



.. code-block:: python


    import mne
    from mne.datasets import sample







Raw data with whitening
-----------------------
.. note:: In the :meth:`mne.io.Raw.plot` with ``noise_cov`` supplied,
          you can press they "w" key to turn whitening on and off.



.. code-block:: python


    data_path = sample.data_path()
    raw_fname = data_path + '/MEG/sample/sample_audvis_filt-0-40_raw.fif'
    raw = mne.io.read_raw_fif(raw_fname, preload=True)

    events = mne.find_events(raw, stim_channel='STI 014')
    event_id = {'auditory/left': 1, 'auditory/right': 2, 'visual/left': 3,
                'visual/right': 4, 'smiley': 5, 'button': 32}
    reject = dict(grad=4000e-13, mag=4e-12, eog=150e-6)
    epochs = mne.Epochs(raw, events, event_id=event_id, reject=reject)

    # baseline noise cov, not a lot of samples
    noise_cov = mne.compute_covariance(epochs, tmax=0., method='shrunk',
                                       verbose='error')

    # butterfly mode shows the differences most clearly
    raw.plot(events=events, butterfly=True)
    raw.plot(noise_cov=noise_cov, events=events, butterfly=True)




.. rst-class:: sphx-glr-horizontal


    *

      .. image:: /auto_tutorials/images/sphx_glr_plot_whitened_001.png
            :class: sphx-glr-multi-img

    *

      .. image:: /auto_tutorials/images/sphx_glr_plot_whitened_002.png
            :class: sphx-glr-multi-img




Epochs with whitening
---------------------



.. code-block:: python

    epochs.plot()
    epochs.plot(noise_cov=noise_cov)




.. rst-class:: sphx-glr-horizontal


    *

      .. image:: /auto_tutorials/images/sphx_glr_plot_whitened_003.png
            :class: sphx-glr-multi-img

    *

      .. image:: /auto_tutorials/images/sphx_glr_plot_whitened_004.png
            :class: sphx-glr-multi-img




Evoked data with whitening
--------------------------



.. code-block:: python


    evoked = epochs.average()
    evoked.plot(time_unit='s')
    evoked.plot(noise_cov=noise_cov, time_unit='s')




.. rst-class:: sphx-glr-horizontal


    *

      .. image:: /auto_tutorials/images/sphx_glr_plot_whitened_005.png
            :class: sphx-glr-multi-img

    *

      .. image:: /auto_tutorials/images/sphx_glr_plot_whitened_006.png
            :class: sphx-glr-multi-img




Evoked data with scaled whitening
---------------------------------
The :meth:`mne.Evoked.plot_white` function takes an additional step of
scaling the whitened plots to show how well the assumption of Gaussian
noise is satisfied by the data:



.. code-block:: python


    evoked.plot_white(noise_cov=noise_cov, time_unit='s')




.. image:: /auto_tutorials/images/sphx_glr_plot_whitened_007.png
    :class: sphx-glr-single-img




Topographic plot with whitening
-------------------------------



.. code-block:: python


    evoked.comment = 'All trials'
    evoked.plot_topo(title='Evoked data')
    evoked.plot_topo(noise_cov=noise_cov, title='Whitened evoked data')



.. rst-class:: sphx-glr-horizontal


    *

      .. image:: /auto_tutorials/images/sphx_glr_plot_whitened_008.png
            :class: sphx-glr-multi-img

    *

      .. image:: /auto_tutorials/images/sphx_glr_plot_whitened_009.png
            :class: sphx-glr-multi-img




**Total running time of the script:** ( 0 minutes  34.760 seconds)


.. _sphx_glr_download_auto_tutorials_plot_whitened.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_whitened.py <plot_whitened.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_whitened.ipynb <plot_whitened.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_
