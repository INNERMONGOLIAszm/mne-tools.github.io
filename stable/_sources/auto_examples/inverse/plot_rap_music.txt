

.. _example_inverse_plot_rap_music.py:


================================
Compute Rap-Music on evoked data
================================

Compute a Recursively Applied and Projected MUltiple Signal Classification
(RAP-MUSIC) on evoked dataset.

The reference for Rap-Music is:
J.C. Mosher and R.M. Leahy. 1999. Source localization using recursively
applied and projected (RAP) MUSIC. Trans. Sig. Proc. 47, 2
(February 1999), 332-340.
DOI=10.1109/78.740118 http://dx.doi.org/10.1109/78.740118



.. rst-class:: horizontal


    *

      .. image:: images/plot_rap_music_001.png
            :scale: 47

    *

      .. image:: images/plot_rap_music_002.png
            :scale: 47

    *

      .. image:: images/plot_rap_music_003.png
            :scale: 47

    *

      .. image:: images/plot_rap_music_004.png
            :scale: 47


**Script output**::

  Reading /data1/agramfort/work/src/mne-python/examples/MNE-sample-data/MEG/sample/sample_audvis-ave.fif ...
      Read a total of 4 projection items:
          PCA-v1 (1 x 102) active
          PCA-v2 (1 x 102) active
          PCA-v3 (1 x 102) active
          Average EEG reference (1 x 60) active
      Found the data of interest:
          t =    -199.80 ...     499.49 ms (Right Auditory)
          0 CTF compensation matrices available
          nave = 61 - aspect type = 100
  Projections have already been applied. Setting proj attribute to True.
  Applying baseline correction ... (mode: mean)
  Reading forward solution from /data1/agramfort/work/src/mne-python/examples/MNE-sample-data/MEG/sample/sample_audvis-meg-eeg-oct-6-fwd.fif...
      Reading a source space...
      Computing patch statistics...
      Patch information added...
      Distance information added...
      [done]
      Reading a source space...
      Computing patch statistics...
  ...



**Python source code:** :download:`plot_rap_music.py <plot_rap_music.py>`

.. literalinclude:: plot_rap_music.py
    :lines: 15-

**Total running time of the example:**   10 seconds

.. raw:: html

    <div class="social-button-container">
        <div class="social-button">
            <a href="https://twitter.com/share" class="twitter-share-button">Tweet</a>
        </div>
        <div class="social-button">
            <g:plusone annotation="inline" width="120" size="medium"></g:plusone>
        </div>
        <div class="social-button">
            <div id="fb-root"></div>
            <script>(function(d, s, id) {
                var js, fjs = d.getElementsByTagName(s)[0];
                if (d.getElementById(id)) return;
                js = d.createElement(s); js.id = id;
                js.src = "//connect.facebook.net/en_US/all.js#xfbml=1";
                fjs.parentNode.insertBefore(js, fjs);
                }(document, 'script', 'facebook-jssdk'));
            </script>
            <div class="fb-like" data-send="false" data-width="450" data-show-faces="false"></div>
        </div>
    </div>
    