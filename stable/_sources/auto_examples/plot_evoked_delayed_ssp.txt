

.. _example_plot_evoked_delayed_ssp.py:


=========================================
Create evoked objects in delayed SSP mode
=========================================

This script shows how to apply SSP projectors delayed, that is,
at the evoked stage. This is particularly useful to support decisions
related to the trade-off between denoising and preserving signal.
We first will extract Epochs and create evoked objects
with the required settings for delayed SSP application.
Then we will explore the impact of the particular SSP projectors
on the evoked data.




.. rst-class:: horizontal


    *

      .. image:: images/plot_evoked_delayed_ssp_001.png
            :scale: 47

    *

      .. image:: images/plot_evoked_delayed_ssp_002.png
            :scale: 47

    *

      .. image:: images/plot_evoked_delayed_ssp_003.png
            :scale: 47




**Python source code:** :download:`plot_evoked_delayed_ssp.py <plot_evoked_delayed_ssp.py>`

.. literalinclude:: plot_evoked_delayed_ssp.py
    :lines: 15-

**Total running time of the example:**    3 seconds

.. raw:: html

    <div class="social-button-container">
        <div class="social-button">
            <a href="https://twitter.com/share" class="twitter-share-button">Tweet</a>
        </div>
        <div class="social-button">
            <g:plusone annotation="inline" width="120" size="medium"></g:plusone>
        </div>
        <div class="social-button">
            <div id="fb-root"></div>
            <script>(function(d, s, id) {
                var js, fjs = d.getElementsByTagName(s)[0];
                if (d.getElementById(id)) return;
                js = d.createElement(s); js.id = id;
                js.src = "//connect.facebook.net/en_US/all.js#xfbml=1";
                fjs.parentNode.insertBefore(js, fjs);
                }(document, 'script', 'facebook-jssdk'));
            </script>
            <div class="fb-like" data-send="false" data-width="450" data-show-faces="false"></div>
        </div>
    </div>
    